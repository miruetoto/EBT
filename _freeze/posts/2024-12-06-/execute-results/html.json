{
  "hash": "6ecb1d05a6bfb633f2e33cb92653148b",
  "result": {
    "engine": "knitr",
    "markdown": "::: {.cell}\n\n```{.r .cell-code}\nlibrary(devtools)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: usethis\n```\n\n\n:::\n\n```{.r .cell-code}\ninstall_github(\"guebin/EBT\",force=TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nUsing GitHub PAT from the git credential store.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nDownloading GitHub repo guebin/EBT@HEAD\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n── R CMD build ─────────────────────────────────────────────────────────────────\n* checking for file ‘/tmp/RtmpQoFhgo/remotesa28a81bd645c3/guebin-EBT-0e44b89/DESCRIPTION’ ... OK\n* preparing ‘ebt’:\n* checking DESCRIPTION meta-information ... OK\n* checking for LF line-endings in source and make files and shell scripts\n* checking for empty or unneeded directories\nOmitted ‘LazyData’ from DESCRIPTION\n* building ‘ebt_0.1.0.tar.gz’\n```\n\n\n:::\n\n```{.r .cell-code}\ninstall_github(\"seoyeonc/gglite\",force=TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nUsing GitHub PAT from the git credential store.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nDownloading GitHub repo seoyeonc/gglite@HEAD\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n── R CMD build ─────────────────────────────────────────────────────────────────\n* checking for file ‘/tmp/RtmpQoFhgo/remotesa28a82611288d/seoyeonc-gglite-1cbaec7/DESCRIPTION’ ... OK\n* preparing ‘gglite’:\n* checking DESCRIPTION meta-information ... OK\n* checking for LF line-endings in source and make files and shell scripts\n* checking for empty or unneeded directories\nOmitted ‘LazyData’ from DESCRIPTION\n* building ‘gglite_0.1.0.tar.gz’\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ebt)\nlibrary(gglite)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'gglite'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    density, line, smooth, step\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:graphics':\n\n    boxplot\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    col, jitter\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(patchwork)\n#---#\nfs=1000\nt=-2000:2000/fs\nv1=sin(2*pi*t)\nv2=cos(20*pi*t)\nf=v1*v2\ngglite()+line(t,f)+coord_cartesian(xlim=c(-0.22,0.22))+xlab(\"\")+ylab(\"\")\n```\n\n::: {.cell-output-display}\n![](2024-12-06-_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nout1<-ebt(t,f,tau=60)\ni1<-out1$sampled_index[[1]]\ni2<-out1$sampled_index[[20]]\ni3<-out1$sampled_index[[40]]\nout2<-ebt(t,f,tau=80)\ni4<-out2$sampled_index[[1]]\ni5<-out2$sampled_index[[20]]\ni6<-out2$sampled_index[[40]]\n\nfig1a = gglite() + \n  point(t,f,col=\"gray60\",cex=0.1) + \n  ggtitle(\"Original Signal\")+xlab(\"\")+ylab(\"\")+\n  coord_cartesian(xlim=c(-0.22,0.22))\nfig1b = fig1a + ggtitle(\"Single Touch of Dessin\") + \n  point(t[i1],out1$band[,1][i1],cex=2,col=2) + # band1, point\n  line(t[i1],out1$band[,1][i1],col=2,alpha=0.2,lwd=1) # band1, line\nfig1c = fig1a + ggtitle(\"Three Touches\") + \n  point(t[i1],out1$band[,1][i1],cex=2,col=2)+ # band1, point\n  line(t[i1],out1$band[,1][i1],col=2,alpha=0.2,lwd=1)+ # band1, line \n  point(t[i2],out1$band[,20][i2],cex=2,col=4)+ # band20, point \n  line(t[i2],out1$band[,20][i2],col=4,alpha=0.2,lwd=1)+ # band20, line\n  point(t[i3],out1$band[,40][i3],cex=2,col=3)+ # band40, point\n  line(t[i3],out1$band[,40][i3],col=3,alpha=0.2,lwd=1) # band40, line\nfig1d <- fig1c + line(t,out1$band,col=\"gray60\",lwd=0.05) + ggtitle(\"All Possible Touches\")\nfig1e <- fig1a + point(t[i4],out2$band[,1][i4],cex=2,col=2)+ # band1, point\n  line(t[i4],out2$band[,1][i4],col=2,alpha=0.2,lwd=1)+ # band1, line \n  point(t[i5],out2$band[,20][i5],cex=2,col=4)+ # band20, point \n  line(t[i5],out2$band[,20][i5],col=4,alpha=0.2,lwd=1)+ # band20, line\n  point(t[i6],out2$band[,40][i6],cex=2,col=3)+ # band40, point\n  line(t[i6],out2$band[,40][i6],col=3,alpha=0.2,lwd=1)+ # band40, line\n  ggtitle(\"Three Touches (With Larger Interval)\")\nfig1f <- fig1e + line(t,out2$band,col=\"gray60\",lwd=0.05) + ggtitle(\"All Possible Touches (With Larger Interval)\")\nfig1 <- (fig1a|fig1b)/(fig1c|fig1d)/(fig1e|fig1f)\nfig1\n```\n\n::: {.cell-output-display}\n![](2024-12-06-_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "2024-12-06-_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}