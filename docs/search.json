[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ebt",
    "section": "",
    "text": "(R) EBT의 개념\n\n\n\n\n\n\n\n\n\n\n\nDec 7, 2024\n\n\n최규빈\n\n\n\n\n\n\n\n\n\n\n\n\n(Python) EBT의 개념\n\n\n\n\n\n\n\n\n\n\n\nDec 7, 2024\n\n\n최규빈\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2024-12-08-PyEBT-EBT의개념.html",
    "href": "posts/2024-12-08-PyEBT-EBT의개념.html",
    "title": "(Python) EBT의 개념",
    "section": "",
    "text": "!pip uninstall PyEBT -y\n!pip install git+https://github.com/miruetoto/PyEBT.git\nimport numpy as np\nimport matplotlib.pyplot as plt \nimport PyEBT\n#from PyPkg.PyEBT.core import ebt\nplt.rcParams['text.usetex'] = True\n\nFound existing installation: PyEBT 0.0.1\nUninstalling PyEBT-0.0.1:\n  Successfully uninstalled PyEBT-0.0.1\nCollecting git+https://github.com/miruetoto/PyEBT.git\n  Cloning https://github.com/miruetoto/PyEBT.git to /tmp/pip-req-build-73q3qkyc\n  Running command git clone --filter=blob:none --quiet https://github.com/miruetoto/PyEBT.git /tmp/pip-req-build-73q3qkyc\n  Resolved https://github.com/miruetoto/PyEBT.git to commit a4cee9530b6e53f4661ee42d05891ac41bd24fee\n  Installing build dependencies ... done\n  Getting requirements to build wheel ... done\n  Preparing metadata (pyproject.toml) ... done\nBuilding wheels for collected packages: PyEBT\n  Building wheel for PyEBT (pyproject.toml) ... done\n  Created wheel for PyEBT: filename=PyEBT-0.0.1-py3-none-any.whl size=3462 sha256=429e61b93b20ff7b1c751abff15c7bbfb638925cba556e04aa567a9bdacbbc39\n  Stored in directory: /tmp/pip-ephem-wheel-cache-nr0vdwm4/wheels/36/fa/c5/b642989a62b0fc7367022e621bafa32c499acb7c4aa0bb48e8\nSuccessfully built PyEBT\nInstalling collected packages: PyEBT\nSuccessfully installed PyEBT-0.0.1\n\n\n\nfs = 1000\nt = np.arange(-2000, 2000 + 1) / fs\nv1 = np.sin(2 * np.pi * t)\nv2 = np.cos(20 * np.pi * t)\nf = v1 * v2\n\n\nout1 = PyEBT.ebt(t,f,tau=60)\ni1 = out1['knot'][0]\ni2 = out1['knot'][20]\ni3 = out1['knot'][40]\nout2 = PyEBT.ebt(t,f,tau=80)\ni4 = out2['knot'][0]\ni5 = out2['knot'][20]\ni6 = out2['knot'][40]\n\n\n# 플롯 설정\nfig, axs = plt.subplots(3, 2, figsize=(10, 10), dpi=150)\n\n# 1. Original Signal\naxs[0, 0].plot(t, f, color='k')\naxs[0, 0].set_title(\"Original Signal\")\naxs[0, 0].set_xlim(-0.25, 0.25)\naxs[0, 0].set_xlabel(\"\")\naxs[0, 0].set_ylabel(\"\")\n\n# 2. Single Touch of Dessin\naxs[0, 1].plot(t, f, color='k')\naxs[0, 1].scatter(t[i1], out1['band'][i1,0], color='red', s=20)\naxs[0, 1].plot(t[i1], out1['band'][i1,0], color='red', alpha=0.2, linewidth=1)\naxs[0, 1].set_title(\"Single Touch of Dessin\")\naxs[0, 1].set_xlim(-0.22, 0.22)\n\n# 3. Three Touches\naxs[1, 0].plot(t, f, color='k')\naxs[1, 0].scatter(t[i1], out1['band'][i1,0], color='red', s=20, label=\"Band 1\")\naxs[1, 0].plot(t[i1], out1['band'][i1,0], color='red', alpha=0.2, linewidth=1)\naxs[1, 0].scatter(t[i2], out1['band'][i2,20], color='blue', s=20, label=\"Band 20\")\naxs[1, 0].plot(t[i2], out1['band'][i2,20], color='blue', alpha=0.2, linewidth=1)\naxs[1, 0].scatter(t[i3], out1['band'][i3,40], color='green', s=20, label=\"Band 40\")\naxs[1, 0].plot(t[i3], out1['band'][i3,40], color='green', alpha=0.2, linewidth=1)\naxs[1, 0].set_title(\"Three Touches\")\naxs[1, 0].legend()\naxs[1, 0].set_xlim(-0.25, 0.25)\n\n# 4. All Possible Touches\naxs[1, 1].plot(t, f, color='k')\nfor i in range(out1['band'].shape[1]):\n    axs[1, 1].plot(t, out1['band'][:,i], color='gray', linewidth=0.05)\naxs[1, 1].set_title(\"All Possible Touches\")\naxs[1, 1].scatter(t[i1], out1['band'][i1,0], color='red', s=20, label=\"Band 1\")\naxs[1, 1].plot(t[i1], out1['band'][i1,0], color='red', alpha=0.2, linewidth=1)\naxs[1, 1].scatter(t[i2], out1['band'][i2,20], color='blue', s=20, label=\"Band 20\")\naxs[1, 1].plot(t[i2], out1['band'][i2,20], color='blue', alpha=0.2, linewidth=1)\naxs[1, 1].scatter(t[i3], out1['band'][i3,40], color='green', s=20, label=\"Band 40\")\naxs[1, 1].plot(t[i3], out1['band'][i3,40], color='green', alpha=0.2, linewidth=1)\naxs[1, 1].set_xlim(-0.25, 0.25)\n\n# 5. Three Touches (With Larger Interval)\naxs[2, 0].plot(t, f, color='k')\naxs[2, 0].scatter(t[i4], out2['band'][i4,0], color='red', s=20, label=\"Band 1\")\naxs[2, 0].plot(t[i4], out2['band'][i4,0], color='red', alpha=0.2, linewidth=1)\naxs[2, 0].scatter(t[i5], out2['band'][i5,20], color='blue', s=20, label=\"Band 20\")\naxs[2, 0].plot(t[i5], out2['band'][i5,20], color='blue', alpha=0.2, linewidth=1)\naxs[2, 0].scatter(t[i6], out2['band'][i6,40], color='green', s=20, label=\"Band 40\")\naxs[2, 0].plot(t[i6], out2['band'][i6,40], color='green', alpha=0.2, linewidth=1)\naxs[2, 0].set_title(\"Three Touches (With Larger Interval)\")\naxs[2, 0].legend()\naxs[2, 0].set_xlim(-0.25, 0.25)\n\n# 6. All Possible Touches (With Larger Interval)\naxs[2, 1].plot(t, f, color='k')\naxs[2, 1].scatter(t[i4], out2['band'][i4,0], color='red', s=20, label=\"Band 1\")\naxs[2, 1].plot(t[i4], out2['band'][i4,0], color='red', alpha=0.2, linewidth=1)\naxs[2, 1].scatter(t[i5], out2['band'][i5,20], color='blue', s=20, label=\"Band 20\")\naxs[2, 1].plot(t[i5], out2['band'][i5,20], color='blue', alpha=0.2, linewidth=1)\naxs[2, 1].scatter(t[i6], out2['band'][i6,40], color='green', s=20, label=\"Band 40\")\naxs[2, 1].plot(t[i6], out2['band'][i6,40], color='green', alpha=0.2, linewidth=1)\nfor i in range(out2['band'].shape[1]):\n    axs[2, 1].plot(t, out2['band'][:, i], color='gray', linewidth=0.05)\naxs[2, 1].set_title(\"All Possible Touches (With Larger Interval)\")\naxs[2, 1].set_xlim(-0.22, 0.22)\n\n# 레이아웃 조정\nplt.tight_layout()\nplt.show()"
  },
  {
    "objectID": "posts/2024-12-06-EBT의개념.html",
    "href": "posts/2024-12-06-EBT의개념.html",
    "title": "(R) EBT의 개념",
    "section": "",
    "text": "library(devtools)\ninstall_github(\"guebin/EBT\",force=TRUE)\ninstall_github(\"seoyeonc/gglite\",force=TRUE)\nlibrary(ebt)\nlibrary(gglite)\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(patchwork)\nfigsize()\n\nUsing GitHub PAT from the git credential store.\n\nDownloading GitHub repo guebin/EBT@HEAD\n\nUsing GitHub PAT from the git credential store.\n\nDownloading GitHub repo seoyeonc/gglite@HEAD\n\n\n\n── R CMD build ─────────────────────────────────────────────────────────────────\n✔  checking for file ‘/tmp/RtmpRPpL3J/remotes18fb85ead973c/guebin-EBT-0e44b89/DESCRIPTION’\n─  preparing ‘ebt’:\n✔  checking DESCRIPTION meta-information\n─  checking for LF line-endings in source and make files and shell scripts\n─  checking for empty or unneeded directories\n   Omitted ‘LazyData’ from DESCRIPTION\n─  building ‘ebt_0.1.0.tar.gz’\n   \n── R CMD build ─────────────────────────────────────────────────────────────────\n✔  checking for file ‘/tmp/RtmpRPpL3J/remotes18fb878f989c7/seoyeonc-gglite-1cbaec7/DESCRIPTION’\n─  preparing ‘gglite’:\n✔  checking DESCRIPTION meta-information\n─  checking for LF line-endings in source and make files and shell scripts\n─  checking for empty or unneeded directories\n   Omitted ‘LazyData’ from DESCRIPTION\n─  building ‘gglite_0.1.0.tar.gz’\n   \n\n\n\n\nfs=1000\nt=-2000:2000/fs\nv1=sin(2*pi*t)\nv2=cos(20*pi*t)\nf=v1*v2\n\n\nout1&lt;-ebt(t,f,tau=60)\ni1&lt;-out1$knot[[1]]\ni2&lt;-out1$knot[[20]]\ni3&lt;-out1$knot[[40]]\nout2&lt;-ebt(t,f,tau=80)\ni4&lt;-out2$knot[[1]]\ni5&lt;-out2$knot[[20]]\ni6&lt;-out2$knot[[40]]\n\n\nfigsize(10,10)\nfig1a = gglite() + \n  point(t,f,col=\"gray60\",cex=0.1) + \n  ggtitle(\"Original Signal\")+xlab(\"\")+ylab(\"\")+\n  coord_cartesian(xlim=c(-0.22,0.22))\nfig1b = fig1a + ggtitle(\"Single Touch of Dessin\") + \n  point(t[i1],out1$band[,1][i1],cex=2,col=2) + # band1, point\n  line(t[i1],out1$band[,1][i1],col=2,alpha=0.2,lwd=1) # band1, line\nfig1c = fig1a + ggtitle(\"Three Touches\") + \n  point(t[i1],out1$band[,1][i1],cex=2,col=2)+ # band1, point\n  line(t[i1],out1$band[,1][i1],col=2,alpha=0.2,lwd=1)+ # band1, line \n  point(t[i2],out1$band[,20][i2],cex=2,col=4)+ # band20, point \n  line(t[i2],out1$band[,20][i2],col=4,alpha=0.2,lwd=1)+ # band20, line\n  point(t[i3],out1$band[,40][i3],cex=2,col=3)+ # band40, point\n  line(t[i3],out1$band[,40][i3],col=3,alpha=0.2,lwd=1) # band40, line\nfig1d &lt;- fig1c + line(t,out1$band,col=\"gray60\",lwd=0.05) + ggtitle(\"All Possible Touches\")\nfig1e &lt;- fig1a + point(t[i4],out2$band[,1][i4],cex=2,col=2)+ # band1, point\n  line(t[i4],out2$band[,1][i4],col=2,alpha=0.2,lwd=1)+ # band1, line \n  point(t[i5],out2$band[,20][i5],cex=2,col=4)+ # band20, point \n  line(t[i5],out2$band[,20][i5],col=4,alpha=0.2,lwd=1)+ # band20, line\n  point(t[i6],out2$band[,40][i6],cex=2,col=3)+ # band40, point\n  line(t[i6],out2$band[,40][i6],col=3,alpha=0.2,lwd=1)+ # band40, line\n  ggtitle(\"Three Touches (With Larger Interval)\")\nfig1f &lt;- fig1e + line(t,out2$band,col=\"gray60\",lwd=0.05) + ggtitle(\"All Possible Touches (With Larger Interval)\")\nfig1 &lt;- (fig1a|fig1b)/(fig1c|fig1d)/(fig1e|fig1f)\nfig1"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  }
]